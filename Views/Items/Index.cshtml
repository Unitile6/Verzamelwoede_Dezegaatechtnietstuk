@model IEnumerable<Verzamelwoede_NonBroken.Models.Item>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div>
    <a asp-action="Index" asp-route-favourite="true">Toon favorieten</a>
@*    <a asp-action="Index">Terug naar lijst</a>*@
</div>
<script>
    function downloadPage() {
        // Maak een Blob-object van de huidige webpagina.
        const html = document.documentElement.outerHTML;
        const blob = new Blob([html], { type: "text/html" });

        // Maak een URL voor het Blob-object.
        const url = window.URL.createObjectURL(blob);

        // Maak een link en stel de attributen in voor download.
        const a = document.createElement("a");
        a.href = url;
        a.download = "Itemlist.html";

        // Simuleer een klik op de link om te downloaden.
        a.click();

        // Maak de URL en het link-element vrij.
        window.URL.revokeObjectURL(url);
    }
</script>
<body>
    <p>Klik op onderstaande knop om de webpagina te downloaden:</p>
    <button onclick="downloadPage()">Download Page</button>
</body>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Imageurl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UsesPerYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Favourite)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @if(item.Category != null){
                @Html.DisplayFor(modelItem => item.Category.Name)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imageurl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UsesPerYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Favourite)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                @Html.ActionLink("Edit Category","Edit","Categories",new {id=item.CategoryId})
            </td>
        </tr>
}
    </tbody>
</table>
